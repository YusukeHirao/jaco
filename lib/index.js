"use strict";
const addSemivoicedMarks_1 = require("./fn/addSemivoicedMarks");
const addVoicedMarks_1 = require("./fn/addVoicedMarks");
const byteSize_1 = require("./fn/byteSize");
const charAt_1 = require("./fn/charAt");
const charCodeAt_1 = require("./fn/charCodeAt");
const combinateSoundMarks_1 = require("./fn/combinateSoundMarks");
const concat_1 = require("./fn/concat");
const convertIterationMarks_1 = require("./fn/convertIterationMarks");
const convertProlongedSoundMarks_1 = require("./fn/convertProlongedSoundMarks");
const endWith_1 = require("./fn/endWith");
const has_1 = require("./fn/has");
const hasSmallLetter_1 = require("./fn/hasSmallLetter");
const hasSurrogatePair_1 = require("./fn/hasSurrogatePair");
const hasUnpairedSurrogate_1 = require("./fn/hasUnpairedSurrogate");
const includes_1 = require("./fn/includes");
const indexOf_1 = require("./fn/indexOf");
const is_1 = require("./fn/is");
const isEmpty_1 = require("./fn/isEmpty");
const isNumeric_1 = require("./fn/isNumeric");
const isOnly_1 = require("./fn/isOnly");
const isOnlyHiragana_1 = require("./fn/isOnlyHiragana");
const isOnlyKatakana_1 = require("./fn/isOnlyKatakana");
const lastIndexOf_1 = require("./fn/lastIndexOf");
const matches_1 = require("./fn/matches");
const naturalKanaOrder_1 = require("./fn/naturalKanaOrder");
const naturalKanaSort_1 = require("./fn/naturalKanaSort");
const padEnd_1 = require("./fn/padEnd");
const padStart_1 = require("./fn/padStart");
const remove_1 = require("./fn/remove");
const removeUnpairedSurrogate_1 = require("./fn/removeUnpairedSurrogate");
const removeVoicedMarks_1 = require("./fn/removeVoicedMarks");
const repeat_1 = require("./fn/repeat");
const replace_1 = require("./fn/replace");
const replaceFromMap_1 = require("./fn/replaceFromMap");
const search_1 = require("./fn/search");
const slice_1 = require("./fn/slice");
const split_1 = require("./fn/split");
const startsWith_1 = require("./fn/startsWith");
const substr_1 = require("./fn/substr");
const substring_1 = require("./fn/substring");
const test_1 = require("./fn/test");
const toBasicLetter_1 = require("./fn/toBasicLetter");
const toHiragana_1 = require("./fn/toHiragana");
const toKatakana_1 = require("./fn/toKatakana");
const toNarrow_1 = require("./fn/toNarrow");
const toNarrowAlphanumeric_1 = require("./fn/toNarrowAlphanumeric");
const toNarrowJapanese_1 = require("./fn/toNarrowJapanese");
const toNarrowKatakana_1 = require("./fn/toNarrowKatakana");
const toNarrowSign_1 = require("./fn/toNarrowSign");
const toNarrowSymbolForJapanese_1 = require("./fn/toNarrowSymbolForJapanese");
const toNumeric_1 = require("./fn/toNumeric");
const toPhoeticKana_1 = require("./fn/toPhoeticKana");
const toWide_1 = require("./fn/toWide");
const toWideAlphanumeric_1 = require("./fn/toWideAlphanumeric");
const toWideJapanese_1 = require("./fn/toWideJapanese");
const toWideKatakana_1 = require("./fn/toWideKatakana");
const toWideSign_1 = require("./fn/toWideSign");
const toWideSymbolForJapanese_1 = require("./fn/toWideSymbolForJapanese");
const jaco_1 = require("./jaco");
// tslint:disable-next-line:no-any
function jaco(str) {
    return new jaco_1.default(str);
}
// tslint:disable:no-namespace no-mergeable-namespace
(function (jaco) {
    'use strict';
    jaco.version = '2.0.0-beta';
    jaco.addSemivoicedMarks = addSemivoicedMarks_1.default;
    jaco.addVoicedMarks = addVoicedMarks_1.default;
    jaco.byteSize = byteSize_1.default;
    jaco.charAt = charAt_1.default;
    jaco.charCodeAt = charCodeAt_1.default;
    jaco.combinateSoundMarks = combinateSoundMarks_1.default;
    jaco.concat = concat_1.default;
    jaco.convertIterationMarks = convertIterationMarks_1.default;
    jaco.convertProlongedSoundMarks = convertProlongedSoundMarks_1.default;
    jaco.endWith = endWith_1.default;
    jaco.has = has_1.default;
    jaco.hasSmallLetter = hasSmallLetter_1.default;
    jaco.hasSurrogatePair = hasSurrogatePair_1.default;
    jaco.hasUnpairedSurrogate = hasUnpairedSurrogate_1.default;
    jaco.includes = includes_1.default;
    jaco.indexOf = indexOf_1.default;
    jaco.is = is_1.default;
    jaco.isEmpty = isEmpty_1.default;
    jaco.isNumeric = isNumeric_1.default;
    jaco.isOnly = isOnly_1.default;
    jaco.isOnlyHiragana = isOnlyHiragana_1.default;
    jaco.isOnlyKatakana = isOnlyKatakana_1.default;
    jaco.lastIndexOf = lastIndexOf_1.default;
    jaco.matches = matches_1.default;
    jaco.naturalKanaOrder = naturalKanaOrder_1.default;
    jaco.naturalKanaSort = naturalKanaSort_1.default;
    jaco.padEnd = padEnd_1.default;
    jaco.padStart = padStart_1.default;
    jaco.remove = remove_1.default;
    jaco.removeUnpairedSurrogate = removeUnpairedSurrogate_1.default;
    jaco.removeVoicedMarks = removeVoicedMarks_1.default;
    jaco.repeat = repeat_1.default;
    jaco.replace = replace_1.default;
    jaco.replaceFromMap = replaceFromMap_1.default;
    jaco.search = search_1.default;
    jaco.slice = slice_1.default;
    jaco.split = split_1.default;
    jaco.startsWith = startsWith_1.default;
    jaco.substr = substr_1.default;
    jaco.substring = substring_1.default;
    jaco.test = test_1.default;
    jaco.toBasicLetter = toBasicLetter_1.default;
    jaco.toHiragana = toHiragana_1.default;
    jaco.toKatakana = toKatakana_1.default;
    jaco.toNarrow = toNarrow_1.default;
    jaco.toNarrowAlphanumeric = toNarrowAlphanumeric_1.default;
    jaco.toNarrowJapanese = toNarrowJapanese_1.default;
    jaco.toNarrowKatakana = toNarrowKatakana_1.default;
    jaco.toNarrowSign = toNarrowSign_1.default;
    jaco.toNarrowSymbolForJapanese = toNarrowSymbolForJapanese_1.default;
    jaco.toNumeric = toNumeric_1.default;
    jaco.toPhoeticKana = toPhoeticKana_1.default;
    jaco.toWide = toWide_1.default;
    jaco.toWideAlphanumeric = toWideAlphanumeric_1.default;
    jaco.toWideJapanese = toWideJapanese_1.default;
    jaco.toWideKatakana = toWideKatakana_1.default;
    jaco.toWideSign = toWideSign_1.default;
    jaco.toWideSymbolForJapanese = toWideSymbolForJapanese_1.default;
})(jaco || (jaco = {}));
window['jaco'] = jaco; // tslint:disable-line:no-string-literal
