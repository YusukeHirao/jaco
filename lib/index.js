"use strict";

var addSemivoicedMarks_1 = require("./fn/addSemivoicedMarks");
var addVoicedMarks_1 = require("./fn/addVoicedMarks");
var byteSize_1 = require("./fn/byteSize");
var charAt_1 = require("./fn/charAt");
var charCodeAt_1 = require("./fn/charCodeAt");
var combinateSoundMarks_1 = require("./fn/combinateSoundMarks");
var concat_1 = require("./fn/concat");
var convertIterationMarks_1 = require("./fn/convertIterationMarks");
var convertProlongedSoundMarks_1 = require("./fn/convertProlongedSoundMarks");
var endWith_1 = require("./fn/endWith");
var has_1 = require("./fn/has");
var hasSmallLetter_1 = require("./fn/hasSmallLetter");
var hasSurrogatePair_1 = require("./fn/hasSurrogatePair");
var hasUnpairedSurrogate_1 = require("./fn/hasUnpairedSurrogate");
var includes_1 = require("./fn/includes");
var indexOf_1 = require("./fn/indexOf");
var is_1 = require("./fn/is");
var isEmpty_1 = require("./fn/isEmpty");
var isNumeric_1 = require("./fn/isNumeric");
var isOnly_1 = require("./fn/isOnly");
var isOnlyHiragana_1 = require("./fn/isOnlyHiragana");
var isOnlyKatakana_1 = require("./fn/isOnlyKatakana");
var lastIndexOf_1 = require("./fn/lastIndexOf");
var matches_1 = require("./fn/matches");
var naturalKanaOrder_1 = require("./fn/naturalKanaOrder");
var naturalKanaSort_1 = require("./fn/naturalKanaSort");
var padEnd_1 = require("./fn/padEnd");
var padStart_1 = require("./fn/padStart");
var remove_1 = require("./fn/remove");
var removeUnpairedSurrogate_1 = require("./fn/removeUnpairedSurrogate");
var removeVoicedMarks_1 = require("./fn/removeVoicedMarks");
var repeat_1 = require("./fn/repeat");
var replace_1 = require("./fn/replace");
var replaceFromMap_1 = require("./fn/replaceFromMap");
var search_1 = require("./fn/search");
var slice_1 = require("./fn/slice");
var split_1 = require("./fn/split");
var startsWith_1 = require("./fn/startsWith");
var substr_1 = require("./fn/substr");
var substring_1 = require("./fn/substring");
var test_1 = require("./fn/test");
var toBasicLetter_1 = require("./fn/toBasicLetter");
var toHiragana_1 = require("./fn/toHiragana");
var toKatakana_1 = require("./fn/toKatakana");
var toNarrow_1 = require("./fn/toNarrow");
var toNarrowAlphanumeric_1 = require("./fn/toNarrowAlphanumeric");
var toNarrowJapanese_1 = require("./fn/toNarrowJapanese");
var toNarrowKatakana_1 = require("./fn/toNarrowKatakana");
var toNarrowSign_1 = require("./fn/toNarrowSign");
var toNarrowSymbolForJapanese_1 = require("./fn/toNarrowSymbolForJapanese");
var toNumeric_1 = require("./fn/toNumeric");
var toPhoeticKana_1 = require("./fn/toPhoeticKana");
var toWide_1 = require("./fn/toWide");
var toWideAlphanumeric_1 = require("./fn/toWideAlphanumeric");
var toWideJapanese_1 = require("./fn/toWideJapanese");
var toWideKatakana_1 = require("./fn/toWideKatakana");
var toWideSign_1 = require("./fn/toWideSign");
var toWideSymbolForJapanese_1 = require("./fn/toWideSymbolForJapanese");
var jaco_1 = require("./jaco");
// tslint:disable-next-line:no-any
function jaco(str) {
    return new jaco_1.default(str);
}
// tslint:disable:no-namespace no-mergeable-namespace
(function (jaco) {
    'use strict';

    jaco.version = '2.0.0-beta';
    jaco.addSemivoicedMarks = addSemivoicedMarks_1.default;
    jaco.addVoicedMarks = addVoicedMarks_1.default;
    jaco.byteSize = byteSize_1.default;
    jaco.charAt = charAt_1.default;
    jaco.charCodeAt = charCodeAt_1.default;
    jaco.combinateSoundMarks = combinateSoundMarks_1.default;
    jaco.concat = concat_1.default;
    jaco.convertIterationMarks = convertIterationMarks_1.default;
    jaco.convertProlongedSoundMarks = convertProlongedSoundMarks_1.default;
    jaco.endWith = endWith_1.default;
    jaco.has = has_1.default;
    jaco.hasSmallLetter = hasSmallLetter_1.default;
    jaco.hasSurrogatePair = hasSurrogatePair_1.default;
    jaco.hasUnpairedSurrogate = hasUnpairedSurrogate_1.default;
    jaco.includes = includes_1.default;
    jaco.indexOf = indexOf_1.default;
    jaco.is = is_1.default;
    jaco.isEmpty = isEmpty_1.default;
    jaco.isNumeric = isNumeric_1.default;
    jaco.isOnly = isOnly_1.default;
    jaco.isOnlyHiragana = isOnlyHiragana_1.default;
    jaco.isOnlyKatakana = isOnlyKatakana_1.default;
    jaco.lastIndexOf = lastIndexOf_1.default;
    jaco.matches = matches_1.default;
    jaco.naturalKanaOrder = naturalKanaOrder_1.default;
    jaco.naturalKanaSort = naturalKanaSort_1.default;
    jaco.padEnd = padEnd_1.default;
    jaco.padStart = padStart_1.default;
    jaco.remove = remove_1.default;
    jaco.removeUnpairedSurrogate = removeUnpairedSurrogate_1.default;
    jaco.removeVoicedMarks = removeVoicedMarks_1.default;
    jaco.repeat = repeat_1.default;
    jaco.replace = replace_1.default;
    jaco.replaceFromMap = replaceFromMap_1.default;
    jaco.search = search_1.default;
    jaco.slice = slice_1.default;
    jaco.split = split_1.default;
    jaco.startsWith = startsWith_1.default;
    jaco.substr = substr_1.default;
    jaco.substring = substring_1.default;
    jaco.test = test_1.default;
    jaco.toBasicLetter = toBasicLetter_1.default;
    jaco.toHiragana = toHiragana_1.default;
    jaco.toKatakana = toKatakana_1.default;
    jaco.toNarrow = toNarrow_1.default;
    jaco.toNarrowAlphanumeric = toNarrowAlphanumeric_1.default;
    jaco.toNarrowJapanese = toNarrowJapanese_1.default;
    jaco.toNarrowKatakana = toNarrowKatakana_1.default;
    jaco.toNarrowSign = toNarrowSign_1.default;
    jaco.toNarrowSymbolForJapanese = toNarrowSymbolForJapanese_1.default;
    jaco.toNumeric = toNumeric_1.default;
    jaco.toPhoeticKana = toPhoeticKana_1.default;
    jaco.toWide = toWide_1.default;
    jaco.toWideAlphanumeric = toWideAlphanumeric_1.default;
    jaco.toWideJapanese = toWideJapanese_1.default;
    jaco.toWideKatakana = toWideKatakana_1.default;
    jaco.toWideSign = toWideSign_1.default;
    jaco.toWideSymbolForJapanese = toWideSymbolForJapanese_1.default;
})(jaco || (jaco = {}));
window['jaco'] = jaco; // tslint:disable-line:no-string-literal